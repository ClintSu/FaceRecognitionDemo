<Window
    x:Class="VlcPlayer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:VlcPlayer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:vlc="clr-namespace:Meta.Vlc.Wpf;assembly=Meta.Vlc.Wpf"
    Title="MainWindow"
    Width="1440"
    Height="900"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Content" Value="打开文件夹" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="#FF363A3D">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF2D3032" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF474B4F" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="borderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#FF232325" />
        </Style>

        <Style x:Key="ThumbBall" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Ellipse
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Stroke="#FF04A3F7"
                            StrokeThickness="2">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0.997" Color="#FFD2D2D2" />
                                    <GradientStop Color="White" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Height" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Track
                                Name="PART_Track"
                                Grid.Row="1"
                                Visibility="Visible">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbBall}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<SnippetSlider>-->
        <Style x:Key="SliderButtonStyle2" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<SnippetThumb>-->
        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stroke="#FF04A3F7"
                                StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0.997" Color="#FFD2D2D2" />
                                        <GradientStop Color="White" />
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#2A96C4" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--</SnippetThumb>-->
        <!--  Template when the orientation of the Slider is Horizontal.  -->

        <ControlTemplate x:Key="VolSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Height="25"
                    Placement="Top"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="25"
                    Margin="0"
                    BorderThickness="1"
                    CornerRadius="0">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource SliderTrackDarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Height="25"
                            Command="Slider.DecreaseLarge"
                            Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Height="30"
                            Margin="-12.5,0,-12.5,0"
                            Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Height="25"
                            Command="Slider.IncreaseLarge"
                            Style="{StaticResource SliderButtonStyle2}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="10"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Height="28"
                    Placement="Top"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border
                    x:Name="TrackBackground"
                    Grid.Row="1"
                    Height="28"
                    Margin="0"
                    BorderThickness="1"
                    CornerRadius="0">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource SliderTrackDarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Height="28"
                            Command="Slider.DecreaseLarge"
                            PreviewMouseDown="PlayProgressSlider_PreviewMouseDown"
                            Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Height="28"
                            Margin="-5,0,0,0"
                            Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Height="28"
                            Command="Slider.IncreaseLarge"
                            PreviewMouseDown="PlayProgressSlider_PreviewMouseDown"
                            Style="{StaticResource SliderButtonStyle2}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="28"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Width="25"
                    Placement="Left"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border
                    x:Name="TrackBackground"
                    Grid.Column="1"
                    Width="25"
                    Margin="0"
                    BorderThickness="1"
                    CornerRadius="2">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.25,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource SliderTrackDarkColor}" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar
                    x:Name="BottomTick"
                    Grid.Column="2"
                    Width="25"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Right"
                    SnapsToDevicePixels="True"
                    Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ProgressSlider" TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="Template" Value="{StaticResource SliderTemplate}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="104" />
                    <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VolSlider" TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="144" />
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="Template" Value="{StaticResource VolSliderTemplate}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="144" />
                    <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <Path
                                Name="path"
                                Width="20"
                                Height="20"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M60,179.25 L99.75,140 60.5,100 69.75,90.25 110.25,130 150,90.25 160.25,100 120.25,140.25 160.25,180.25 150.25,190.5 110,150.5 70,190 z"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill"
                                Stroke="#AAAAAA"
                                StrokeThickness="0" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="path" Property="Fill" Value="#CCCCCC" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="path" Property="Opacity" Value="0.2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type local:LoadingWait}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:LoadingWait}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Width="50" Height="50">
                                <Grid.Resources>
                                    <!--  Value Converters  -->

                                    <!--  Particle Styling ,must to has RelativeSource  -->
                                    <SolidColorBrush x:Key="ParticleColor" Color="{Binding Path=FillColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <SolidColorBrush x:Key="ParticleBackgroundColor" Color="Transparent" />
                                    <system:Double x:Key="ParticleOpacity">1</system:Double>
                                    <system:Double x:Key="ParticleRadius">5</system:Double>

                                    <system:Double x:Key="StartingPointX">0</system:Double>
                                    <system:Double x:Key="StartingPointY">-20</system:Double>

                                    <system:Double x:Key="RotationPointX">0.5</system:Double>
                                    <system:Double x:Key="RotationPointY">0.5</system:Double>

                                    <!--  StoryBoard  -->
                                    <system:TimeSpan x:Key="StoryBoardBeginTimeP0">00:00:00.000</system:TimeSpan>
                                    <system:TimeSpan x:Key="StoryBoardBeginTimeP1">00:00:00.100</system:TimeSpan>
                                    <system:TimeSpan x:Key="StoryBoardBeginTimeP2">00:00:00.200</system:TimeSpan>
                                    <system:TimeSpan x:Key="StoryBoardBeginTimeP3">00:00:00.300</system:TimeSpan>
                                    <system:TimeSpan x:Key="StoryBoardBeginTimeP4">00:00:00.400</system:TimeSpan>
                                    <Duration x:Key="StoryBoardDuration">00:00:01.800</Duration>

                                    <!--  Particle Origin Angles  -->
                                    <system:Double x:Key="ParticleOriginAngleP0">0</system:Double>
                                    <system:Double x:Key="ParticleOriginAngleP1">-10</system:Double>
                                    <system:Double x:Key="ParticleOriginAngleP2">-20</system:Double>
                                    <system:Double x:Key="ParticleOriginAngleP3">-30</system:Double>
                                    <system:Double x:Key="ParticleOriginAngleP4">-40</system:Double>

                                    <!--  Particle Position & Timing 1  -->
                                    <system:Double x:Key="ParticleBeginAngle1">0</system:Double>
                                    <system:Double x:Key="ParticleEndAngle1">90</system:Double>
                                    <system:TimeSpan x:Key="ParticleBeginTime1">00:00:00.000</system:TimeSpan>
                                    <Duration x:Key="ParticleDuration1">00:00:00.750</Duration>

                                    <!--  Particle Position & Timing 2  -->
                                    <system:Double x:Key="ParticleBeginAngle2">90</system:Double>
                                    <system:Double x:Key="ParticleEndAngle2">270</system:Double>
                                    <system:TimeSpan x:Key="ParticleBeginTime2">00:00:00.751</system:TimeSpan>
                                    <Duration x:Key="ParticleDuration2">00:00:00.300</Duration>

                                    <!--  Particle Position & Timing 3  -->
                                    <system:Double x:Key="ParticleBeginAngle3">270</system:Double>
                                    <system:Double x:Key="ParticleEndAngle3">360</system:Double>
                                    <system:TimeSpan x:Key="ParticleBeginTime3">00:00:01.052</system:TimeSpan>
                                    <Duration x:Key="ParticleDuration3">00:00:00.750</Duration>

                                    <Style x:Key="EllipseStyle" TargetType="Ellipse">
                                        <Setter Property="Width" Value="{StaticResource ParticleRadius}" />
                                        <Setter Property="Height" Value="{StaticResource ParticleRadius}" />
                                        <Setter Property="Fill" Value="{StaticResource ParticleColor}" />
                                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                        <Setter Property="Opacity" Value="{StaticResource ParticleOpacity}" />
                                    </Style>
                                </Grid.Resources>
                                <Canvas
                                    Width="1"
                                    Height="1"
                                    Margin="0,0,0,0">
                                    <Canvas.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard
                                                        BeginTime="{StaticResource StoryBoardBeginTimeP0}"
                                                        RepeatBehavior="Forever"
                                                        Duration="{StaticResource StoryBoardDuration}">
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime1}"
                                                            Storyboard.TargetName="p0"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle1}"
                                                            To="{StaticResource ParticleEndAngle1}"
                                                            Duration="{StaticResource ParticleDuration1}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime2}"
                                                            Storyboard.TargetName="p0"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle2}"
                                                            To="{StaticResource ParticleEndAngle2}"
                                                            Duration="{StaticResource ParticleDuration2}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime3}"
                                                            Storyboard.TargetName="p0"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle3}"
                                                            To="{StaticResource ParticleEndAngle3}"
                                                            Duration="{StaticResource ParticleDuration3}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard
                                                        BeginTime="{StaticResource StoryBoardBeginTimeP1}"
                                                        RepeatBehavior="Forever"
                                                        Duration="{StaticResource StoryBoardDuration}">

                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime1}"
                                                            Storyboard.TargetName="p1"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle1}"
                                                            To="{StaticResource ParticleEndAngle1}"
                                                            Duration="{StaticResource ParticleDuration1}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime2}"
                                                            Storyboard.TargetName="p1"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle2}"
                                                            To="{StaticResource ParticleEndAngle2}"
                                                            Duration="{StaticResource ParticleDuration2}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime3}"
                                                            Storyboard.TargetName="p1"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle3}"
                                                            To="{StaticResource ParticleEndAngle3}"
                                                            Duration="{StaticResource ParticleDuration3}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard
                                                        BeginTime="{StaticResource StoryBoardBeginTimeP2}"
                                                        RepeatBehavior="Forever"
                                                        Duration="{StaticResource StoryBoardDuration}">

                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime1}"
                                                            Storyboard.TargetName="p2"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle1}"
                                                            To="{StaticResource ParticleEndAngle1}"
                                                            Duration="{StaticResource ParticleDuration1}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime2}"
                                                            Storyboard.TargetName="p2"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle2}"
                                                            To="{StaticResource ParticleEndAngle2}"
                                                            Duration="{StaticResource ParticleDuration2}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime3}"
                                                            Storyboard.TargetName="p2"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle3}"
                                                            To="{StaticResource ParticleEndAngle3}"
                                                            Duration="{StaticResource ParticleDuration3}" />
                                                    </Storyboard>
                                                </BeginStoryboard>

                                                <BeginStoryboard>
                                                    <Storyboard
                                                        BeginTime="{StaticResource StoryBoardBeginTimeP3}"
                                                        RepeatBehavior="Forever"
                                                        Duration="{StaticResource StoryBoardDuration}">

                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime1}"
                                                            Storyboard.TargetName="p3"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle1}"
                                                            To="{StaticResource ParticleEndAngle1}"
                                                            Duration="{StaticResource ParticleDuration1}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime2}"
                                                            Storyboard.TargetName="p3"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle2}"
                                                            To="{StaticResource ParticleEndAngle2}"
                                                            Duration="{StaticResource ParticleDuration2}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime3}"
                                                            Storyboard.TargetName="p3"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle3}"
                                                            To="{StaticResource ParticleEndAngle3}"
                                                            Duration="{StaticResource ParticleDuration3}" />
                                                    </Storyboard>
                                                </BeginStoryboard>

                                                <BeginStoryboard>
                                                    <Storyboard
                                                        BeginTime="{StaticResource StoryBoardBeginTimeP4}"
                                                        RepeatBehavior="Forever"
                                                        Duration="{StaticResource StoryBoardDuration}">

                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime1}"
                                                            Storyboard.TargetName="p4"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle1}"
                                                            To="{StaticResource ParticleEndAngle1}"
                                                            Duration="{StaticResource ParticleDuration1}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime2}"
                                                            Storyboard.TargetName="p4"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle2}"
                                                            To="{StaticResource ParticleEndAngle2}"
                                                            Duration="{StaticResource ParticleDuration2}" />
                                                        <DoubleAnimation
                                                            BeginTime="{StaticResource ParticleBeginTime3}"
                                                            Storyboard.TargetName="p4"
                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                            From="{StaticResource ParticleBeginAngle3}"
                                                            To="{StaticResource ParticleEndAngle3}"
                                                            Duration="{StaticResource ParticleDuration3}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Canvas.Triggers>
                                    <Border
                                        x:Name="p0"
                                        Background="{StaticResource ParticleBackgroundColor}"
                                        Opacity="{StaticResource ParticleOpacity}">
                                        <Border.RenderTransform>
                                            <RotateTransform />
                                        </Border.RenderTransform>
                                        <Border.RenderTransformOrigin>
                                            <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                                        </Border.RenderTransformOrigin>
                                        <Ellipse Style="{StaticResource EllipseStyle}">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                                                    <RotateTransform Angle="{StaticResource ParticleOriginAngleP0}" />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Border>
                                    <Border
                                        x:Name="p1"
                                        Background="{StaticResource ParticleBackgroundColor}"
                                        Opacity="{StaticResource ParticleOpacity}">
                                        <Border.RenderTransform>
                                            <RotateTransform />
                                        </Border.RenderTransform>
                                        <Border.RenderTransformOrigin>
                                            <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                                        </Border.RenderTransformOrigin>
                                        <Ellipse Style="{StaticResource EllipseStyle}">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                                                    <RotateTransform Angle="{StaticResource ParticleOriginAngleP1}" />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Border>
                                    <Border
                                        x:Name="p2"
                                        Background="{StaticResource ParticleBackgroundColor}"
                                        Opacity="{StaticResource ParticleOpacity}">
                                        <Border.RenderTransform>
                                            <RotateTransform />
                                        </Border.RenderTransform>
                                        <Border.RenderTransformOrigin>
                                            <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                                        </Border.RenderTransformOrigin>
                                        <Ellipse Style="{StaticResource EllipseStyle}">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                                                    <RotateTransform Angle="{StaticResource ParticleOriginAngleP2}" />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Border>
                                    <Border
                                        x:Name="p3"
                                        Background="{StaticResource ParticleBackgroundColor}"
                                        Opacity="{StaticResource ParticleOpacity}">
                                        <Border.RenderTransform>
                                            <RotateTransform />
                                        </Border.RenderTransform>
                                        <Border.RenderTransformOrigin>
                                            <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                                        </Border.RenderTransformOrigin>
                                        <Ellipse Style="{StaticResource EllipseStyle}">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                                                    <RotateTransform Angle="{StaticResource ParticleOriginAngleP3}" />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Border>
                                    <Border
                                        x:Name="p4"
                                        Background="{StaticResource ParticleBackgroundColor}"
                                        Opacity="{StaticResource ParticleOpacity}">
                                        <Border.RenderTransform>
                                            <RotateTransform />
                                        </Border.RenderTransform>
                                        <Border.RenderTransformOrigin>
                                            <Point X="{StaticResource RotationPointX}" Y="{StaticResource RotationPointY}" />
                                        </Border.RenderTransformOrigin>
                                        <Ellipse Style="{StaticResource EllipseStyle}">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform X="{StaticResource StartingPointX}" Y="{StaticResource StartingPointY}" />
                                                    <RotateTransform Angle="{StaticResource ParticleOriginAngleP4}" />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Border>
                                </Canvas>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Border Background="Black" CornerRadius="3">
        <Grid Margin="2" Background="#474747">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid
                x:Name="GridTitle"
                Grid.Row="0"
                Height="50"
                Background="#FF2D2D2D"
                MouseMove="GridTitle_MouseMove">
                <TextBlock
                    x:Name="VideoTitle"
                    Margin="25,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    FontSize="16"
                    Foreground="#BBBBBB"
                    Text="视频名称" />
                <Button
                    Width="40"
                    Height="40"
                    Margin="5,0,25,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Click="Leave_Click"
                    Foreground="#BBBBBB"
                    Style="{StaticResource CloseButtonStyle}" />
            </Grid>


            <Grid
                x:Name="LayoutParent"
                Grid.Row="1"
                PreviewMouseLeftButtonDown="LayoutParent_PreviewMouseLeftButtonDown">
                <Grid.Resources>
                    <x:Array x:Key="VlcOptions" Type="{x:Type system:String}">
                        <system:String>-I</system:String>
                        <system:String>--dummy-quiet</system:String>
                        <system:String>--ignore-config</system:String>
                        <system:String>--no-video-title</system:String>
                        <system:String>--no-sub-autodetect-file</system:String>
                    </x:Array>
                </Grid.Resources>
                <vlc:VlcPlayer
                    x:Name="Player"
                    EndBehavior="Nothing"
                    LibVlcPath="Libvlc"
                    Stretch="Fill"
                    VlcOption="{Binding VlcOptions}" />
                <local:LoadingWait
                    x:Name="loadingWait"
                    FillColor="#BBBBBB"
                    Visibility="Visible" />
            </Grid>

            <Grid Grid.Row="2">
                <Border
                    Height="50"
                    BorderBrush="Black"
                    BorderThickness="2,1,2,2">
                    <Grid x:Name="LayoutContorl">
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FF2D2D2D" />
                                <GradientStop Offset="0.5" Color="#FF0F0F0F" />
                                <GradientStop Offset="1" Color="#FF2D2D2D" />
                            </LinearGradientBrush>
                        </Grid.Background>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="300" />

                        </Grid.ColumnDefinitions>

                        <Slider
                            x:Name="ProgressSlider"
                            Grid.Column="1"
                            Margin="20,0"
                            VerticalAlignment="Center"
                            Maximum="1"
                            Opacity="0.8"
                            SmallChange="0.00001"
                            Style="{StaticResource ProgressSlider}"
                            Value="{Binding Position, ElementName=Player}" />


                        <StackPanel
                            Grid.Column="2"
                            Height="1"
                            VerticalAlignment="Top"
                            Background="Black" />


                        <ToggleButton
                            x:Name="BtnPlay"
                            Click="BtnPlay_Click"
                            Tag="0">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid x:Name="grid" Cursor="Hand">
                                        <Ellipse
                                            x:Name="ellipse"
                                            Width="40"
                                            Height="40"
                                            Fill="Transparent"
                                            Stroke="#BBBBBB"
                                            StrokeThickness="2" />
                                        <Path
                                            x:Name="pathplay"
                                            Width="22"
                                            Height="22"
                                            Margin="5,0,0,0"
                                            Data="M450,190 L450,240 480,215"
                                            Fill="White"
                                            Stretch="Fill"
                                            Visibility="Collapsed" />
                                        <Grid x:Name="pauserect">
                                            <Rectangle
                                                x:Name="pauserect1"
                                                Width="5"
                                                Height="22"
                                                Margin="0,0,10,0"
                                                HorizontalAlignment="Center"
                                                Fill="White" />
                                            <Rectangle
                                                x:Name="pauserect2"
                                                Width="5"
                                                Height="22"
                                                Margin="10,0,0,0"
                                                HorizontalAlignment="Center"
                                                Fill="White" />
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="pauserect1" Property="Fill" Value="#FF29ABE5 " />
                                            <Setter TargetName="pauserect2" Property="Fill" Value="#FF29ABE5 " />
                                            <Setter TargetName="pathplay" Property="Fill" Value="#FF29ABE5 " />
                                            <Setter TargetName="ellipse" Property="Stroke" Value="#FF29ABE5 " />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="grid" Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ellipse" Property="Stroke" Value="#FF29ABE5 " />
                                            <Setter TargetName="pauserect1" Property="Fill" Value="#FF29ABE5 " />
                                            <Setter TargetName="pauserect2" Property="Fill" Value="#FF29ABE5 " />
                                            <Setter TargetName="pathplay" Property="Fill" Value="#FF29ABE5 " />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="pathplay" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="pauserect" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter TargetName="pathplay" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="pauserect" Property="Visibility" Value="Collapsed" />

                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter TargetName="pathplay" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="pauserect" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>


                        <StackPanel
                            Grid.Column="2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock
                                Name="CurrentPositionTime"
                                FontSize="10"
                                Foreground="White">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                            <Binding ElementName="Player" Path="Time.Hours" />
                                            <Binding ElementName="Player" Path="Time.Minutes" />
                                            <Binding ElementName="Player" Path="Time.Seconds" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </TextBlock>
                            <TextBlock
                                FontSize="10"
                                Foreground="White"
                                Text="/" />
                            <TextBlock
                                Name="VideoAllTime"
                                FontSize="10"
                                Foreground="White">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                                        <Binding ElementName="Player" Path="Length.Hours" />
                                        <Binding ElementName="Player" Path="Length.Minutes" />
                                        <Binding ElementName="Player" Path="Length.Seconds" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>


                        <StackPanel
                            Grid.Column="3"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <Grid
                                Width="30"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center">
                                <Path
                                    x:Name="CloseSound"
                                    Width="33"
                                    VerticalAlignment="Center"
                                    Data="F1M1.604,2.305C1.604,2.305 2.396,1.695 2.396,1.695 2.396,1.695 12.396,14.695 12.396,14.695 12.396,14.695 11.604,15.305 11.604,15.305 11.604,15.305 1.604,2.305 1.604,2.305"
                                    Fill="White"
                                    Stretch="Fill"
                                    Tag="0"
                                    Visibility="Collapsed" />
                                <Path
                                    Width="25"
                                    Height="30"
                                    VerticalAlignment="Center"
                                    Data="F1M9,2C9,2 9,23 9,15 9,15 5,11 5,11 5,11 2,11 2,11 2,11 2,6 2,6 2,6 5,6 5,6 5,6 9,2 9,2z"
                                    Fill="White"
                                    Stretch="Fill" />
                            </Grid>
                            <Slider
                                Name="VolumeSlider"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                Maximum="100"
                                Minimum="0"
                                SmallChange="1"
                                Style="{StaticResource VolSlider}"
                                Value="{Binding Volume, ElementName=Player}" />
                            <Button
                                x:Name="BtnPush"
                                Margin="35,0"
                                VerticalAlignment="Center"
                                Click="BtnPush_Click"
                                Tag="1">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid
                                            x:Name="grid"
                                            Width="35"
                                            Height="35"
                                            Background="Transparent">
                                            <Path
                                                x:Name="path"
                                                Data="F1M21.063,16.375C21.58,16.375 22,16.795 22,17.312 22,17.312 22,21.063 22,21.063 22,21.58 21.58,22 21.063,22 21.063,22 17.312,22 17.312,22 16.795,22 16.375,21.58 16.375,21.063 16.375,20.545 16.795,20.125 17.312,20.125 17.312,20.125 20.125,20.125 20.125,20.125 20.125,20.125 20.125,17.312 20.125,17.312 20.125,16.795 20.545,16.375 21.063,16.375z M2.937,16.375C3.456,16.375 3.875,16.795 3.875,17.312 3.875,17.312 3.875,20.125 3.875,20.125 3.875,20.125 6.687,20.125 6.687,20.125 7.206,20.125 7.625,20.545 7.625,21.063 7.625,21.58 7.206,22 6.687,22 6.687,22 2.937,22 2.937,22 2.419,22 2,21.58 2,21.063 2,21.063 2,17.312 2,17.312 2,16.795 2.419,16.375 2.937,16.375z M7,7C7,7 7,17 7,17 7,17 17,17 17,17 17,17 17,7 17,7 17,7 7,7 7,7z M5.125,5.125C5.125,5.125 18.875,5.125 18.875,5.125 18.875,5.125 18.875,18.875 18.875,18.875 18.875,18.875 5.125,18.875 5.125,18.875 5.125,18.875 5.125,5.125 5.125,5.125z M17.312,2C17.312,2 21.063,2 21.063,2 21.58,2 22,2.42 22,2.937 22,2.937 22,6.687 22,6.687 22,7.205 21.58,7.625 21.063,7.625 20.545,7.625 20.125,7.205 20.125,6.687 20.125,6.687 20.125,3.875 20.125,3.875 20.125,3.875 17.312,3.875 17.312,3.875 16.795,3.875 16.375,3.455 16.375,2.937 16.375,2.42 16.795,2 17.312,2z M2.937,2C2.937,2 6.687,2 6.687,2 7.206,2 7.625,2.42 7.625,2.937 7.625,3.455 7.206,3.875 6.687,3.875 6.687,3.875 3.875,3.875 3.875,3.875 3.875,3.875 3.875,6.687 3.875,6.687 3.875,7.205 3.456,7.625 2.937,7.625 2.419,7.625 2,7.205 2,6.687 2,6.687 2,2.937 2,2.937 2,2.42 2.419,2 2.937,2z"
                                                Fill="#FF93939D"
                                                Stretch="Fill" />
                                            <Path
                                                x:Name="path2"
                                                Data="F1M14,14C14,14 21,14 21,14 21,14.781 21,15.187 21,16 21,16 18,16 18,16 18,16 22,20 22,20 21.054,20.928 21.007,21.038 20,22 20,22 16,18 16,18 16,18 16,21 16,21 15.312,21 14.969,21 14,21 14,21 14,16.406 14,14z M3,14C3,14 7.906,14 10,14 10,14 10,21 10,21 8.906,21 9.188,21 8,21 8,21 8,18 8,18 8,18 4,22 4,22 3.414,21.429 2.929,20.945 2,20 2,20 6,16 6,16 6,16 3,16 3,16 3,15.094 3,14.625 3,14z M20,2C20.976,2.931 21.272,3.291 22,4 22,4 18,8 18,8 18,8 21,8 21,8 21,8.75 21,9.25 21,10 21,10 14,10 14,10 14,10 14,3 14,3 14.969,3 15.156,3 16,3 16,3 16,6 16,6 16,6 20,2 20,2z M4,2C4,2 8,6 8,6 8,6 8,3 8,3 9.25,3 8.844,3 10,3 10,3 10,10 10,10 10,10 3,10 3,10 3,9.375 3,8.656 3,8 3,8 6,8 6,8 6,8 2,4 2,4 2.929,3.086 3.227,2.759 4,2z"
                                                Fill="#FF93939D"
                                                Stretch="Fill"
                                                Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="path" Property="Fill" Value="#FF29ABE5" />
                                                <Setter TargetName="path2" Property="Fill" Value="#FF29ABE5" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="2">
                                                <Setter TargetName="path" Property="Visibility" Value="Collapsed" />
                                                <Setter TargetName="path2" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="grid" Property="ToolTip" Value="还原" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="1">
                                                <Setter TargetName="path" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="path2" Property="Visibility" Value="Collapsed" />
                                                <Setter TargetName="grid" Property="ToolTip" Value="全屏" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>



                    </Grid>
                </Border>
            </Grid>

        </Grid>
    </Border>
</Window>
